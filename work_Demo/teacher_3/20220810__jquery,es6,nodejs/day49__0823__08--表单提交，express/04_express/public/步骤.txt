a!express 搭建web服务器的步骤

1.---初始化项目
npm init  
2---下载express 框架
npm install express  

3.---引入express
let express = require("express");

4.---创建应用实例
let app=express();

5.---监听端口
app.listen(8080,()=>{
    console.log("web服务器启动成功啦“)
})

6.---注册中间键。

先新建一个文件夹，例如public 在文件夹中新建index.html，随便输入点内容,例如<h1>欢迎来到Express</h1>
app.use(express.static("public"))

7.---在浏览器中输入localhost:8080即可查看效果。

8.---进入其他页面
方法1，在index中链接其他页面。例如<a href="login.html>点击登录</a>
方法2，浏览器输入localhost:8080/login.html

9.---发送接收数据。
参数一地址，参数二传递的数据。 res后端传递给前端。req前端传递给后端。

app.get("/user",(req,res)=>{
    res.send("这是后端传递给前端的数据")
})

如果用post方法则app.post()
另外还可以用delete，push等方法。一般是get或者post方法。


全部代码如下：

// 引入express  ---默认会先从当前文件夹的node_modules中找，如果找不到就会从nodejs的内置模块中查询
let express = require("express");
console.log(express);

// express()    创建应用实例。
let app = express();
console.log(app);

// use() 注册中间键 static---使用静态资源文件夹。
// 当使用了静态资源文件夹之后，web服务就可以访问静态资源文件夹中的所有静态资源。默认会进入index文件
// 如果想进入其他页面，需要在添加页面名称例如 在浏览器中输入localhost:8080进入index 输入localhost:8080/login.html进入login
app.use(express.static("public"))
// 监听端口 listen ,参数1：端口号
app.listen(8080, function () {
    console.log("web服务启动成功");
})//Connot GET/ 访问到了但是没有数据


// 请求方式 get ,delete,push,post
// 定义get请求接口路由。--前端叫接口。  ---参数1：访问地址  参数2：访问成功的回调函数


app.get("/user", (req, res) => {
    // req  request 请求，请求的数据放在这里
    // res response 响应。响应体。
    console.log("收到前端请求啦");
    // 向客服端响应数据
    res.send("哈哈哈，返回的数据")
})
/* 
本机访问有3种
1.http:127.0.0.1:8080
2.localhost:8080
3.电脑id:8080  ---需要用管理员身份登录cmd 
*/
